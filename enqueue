#include <stdio.h>
#define MAXSIZE 5


int queue[MAXSIZE];
int front = -1;
int rear = -1;


int isEmpty() {
    if (front == -1)   
        return 1;
    else
        return 0;
}


int isFull() {
    if (rear == MAXSIZE - 1)  
        return 1;
    else
        return 0;
}


int peek() {
    if (!isEmpty())
        return queue[front];
    else {
        printf("Queue is empty.\n");
        return -1;
    }
}


void enqueue(int item) {
    if (isFull()) {
        printf("Queue is full, cannot insert.\n");
    } else {
        if (front == -1 && rear == -1) { // First insertion
            front = rear = 0;
            queue[rear] = item;
        } else {
            rear++;
            queue[rear] = item;
        }
        printf("Inserted %d into the queue.\n", item);
    }
}


int dequeue() {
    int item;
    if (isEmpty()) {
        printf("Queue is empty, cannot delete.\n");
        return -1;
    } else {
        if (front == rear) { // Only one element present
            item = queue[front];
            front = rear = -1;
        } else {
            item = queue[front];
            front++;
        }
        return item;
    }
}


void display() {
    if (isEmpty()) {
        printf("Queue is empty.\n");
    } else {
        printf("Queue elements: ");
        for (int i = front; i <= rear; i++) {
            printf("%d ", queue[i]);
        }
        printf("\n");
    }
}


int main() {
    int choice, item;

    while (1) {
        printf("\nQueue Operations Menu:\n");
        printf("1. Enqueue\n");
        printf("2. Dequeue\n");
        printf("3. Peek\n");
        printf("4. Display\n");
        printf("5. Check if Empty\n");
        printf("6. Check if Full\n");
        printf("7. Exit\n");
        printf("Enter your choice: ");
        scanf("%d", &choice);

        switch (choice) {
            case 1:
                printf("Enter item to insert: ");
                scanf("%d", &item);
                enqueue(item);
                break;
            case 2:
                item = dequeue();
                if (item != -1)
                    printf("Deleted item: %d\n", item);
                break;
            case 3:
                item = peek();
                if (item != -1)
                    printf("Front element: %d\n", item);
                break;
            case 4:
                display();
                break;
            case 5:
                if (isEmpty())
                    printf("Queue is empty.\n");
                else
                    printf("Queue is NOT empty.\n");
                break;
            case 6:
                if (isFull())
                    printf("Queue is full.\n");
                else
                    printf("Queue is NOT full.\n");
                break;
            case 7:
                return 0;
            default:
                printf("Invalid choice, try again.\n");
        }
    }
}
